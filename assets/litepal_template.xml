<?xml version="1.0" encoding="utf-8"?>
<litepal>
    <!--
		Define the database file name of your application. 
		By default each database file name should be end with .db. 
		If you didn't name your database end with .db, 
		LitePal would plus the suffix automaticly for you.
		For example:    
    	<dbname value="demo" ></dbname>
		
		Note this mark is necessary.
    -->
    <dbname value="demo" ></dbname> 
    
    <!--
    	Define the version of your codes currently is. Each time you 
    	want to upgrade your database, the version mark will help
    	you. Using LitePal to upgrade database is very simple. Modify
    	the models you defined in the mapping mark, and just make the
    	value in version mark plus one, the upgrade of database will
    	be processed automaticly without concern.
		For example:    
    	<version value="1" ></version>
		    	
    	Note this mark is necessary.
     -->
    <version value="147" ></version> 

    <!-- 
    	Define your models in the list with mapping mark, LitePal will create
    	tables for each mapping class with all the supported fields
    	defined in models into corresponding columns. Remeber to use
    	the full name of class, or LitePal won't be able to find it.
    	For example:    
    	<list>
    		<mapping class="org.litepal.model.Teacher"></mapping>
    		<mapping class="org.litepal.model.Student"></mapping>
    	</list>
    	
    	Note the list mark and mapping mark are necessary.
     -->
    <list>
       <mapping class="com.test.Teacher" ></mapping>
        <mapping class="com.test.Classroom"></mapping>
        <!--  <mapping class="com.test.Student" ></mapping> --> 
            <mapping class="com.test.IdCard" ></mapping> 
    </list>

    <!-- 
    	Define the cases of the tables and columns name. Java is a
    	case sensitive language, while database is case insensitive.
    	LitePal will turn all classes names and fields names into lowercase
    	by default while create or upgrade database. Users can change
    	this behavior into the styles their like. "keep" will keep the
    	cases of classes and fields. "upper" will turn all classes names
    	and fields names into uppercase. "lower" will act as default. 
    	Do not change the value after you run your app for the first time,
    	or it might cause the exception that column can not be found.
    	value options: keep lower upper
    	For example:    
    	<cases value="keep" ></cases>
    	
		Note this mark is optional for developers.
     -->

</litepal>